[{"name":"abstract class CoInvocationHandler : InvocationHandler","description":"com.github.coroutine.proxy.CoInvocationHandler","location":"redis-coroutine/com.github.coroutine.proxy/-co-invocation-handler/index.html","searchKeys":["CoInvocationHandler","abstract class CoInvocationHandler : InvocationHandler","com.github.coroutine.proxy.CoInvocationHandler"]},{"name":"abstract fun invoke(function: KFunction<*>, parameters: List<*>): Any?","description":"com.github.coroutine.proxy.CoInvocationHandler.invoke","location":"redis-coroutine/com.github.coroutine.proxy/-co-invocation-handler/invoke.html","searchKeys":["invoke","abstract fun invoke(function: KFunction<*>, parameters: List<*>): Any?","com.github.coroutine.proxy.CoInvocationHandler.invoke"]},{"name":"abstract suspend fun coInvoke(function: KFunction<*>, parameters: List<*>): Any?","description":"com.github.coroutine.proxy.CoInvocationHandler.coInvoke","location":"redis-coroutine/com.github.coroutine.proxy/-co-invocation-handler/co-invoke.html","searchKeys":["coInvoke","abstract suspend fun coInvoke(function: KFunction<*>, parameters: List<*>): Any?","com.github.coroutine.proxy.CoInvocationHandler.coInvoke"]},{"name":"abstract suspend fun deleteByKey(key: K): Boolean","description":"com.github.coroutine.repository.CoroutineRedisRepository.deleteByKey","location":"redis-coroutine/com.github.coroutine.repository/-coroutine-redis-repository/delete-by-key.html","searchKeys":["deleteByKey","abstract suspend fun deleteByKey(key: K): Boolean","com.github.coroutine.repository.CoroutineRedisRepository.deleteByKey"]},{"name":"abstract suspend fun findByKey(key: K): V?","description":"com.github.coroutine.repository.CoroutineRedisRepository.findByKey","location":"redis-coroutine/com.github.coroutine.repository/-coroutine-redis-repository/find-by-key.html","searchKeys":["findByKey","abstract suspend fun findByKey(key: K): V?","com.github.coroutine.repository.CoroutineRedisRepository.findByKey"]},{"name":"abstract suspend fun save(value: V): V","description":"com.github.coroutine.repository.CoroutineRedisRepository.save","location":"redis-coroutine/com.github.coroutine.repository/-coroutine-redis-repository/save.html","searchKeys":["save","abstract suspend fun save(value: V): V","com.github.coroutine.repository.CoroutineRedisRepository.save"]},{"name":"abstract suspend fun save(value: V, expire: Duration): V","description":"com.github.coroutine.repository.CoroutineRedisRepository.save","location":"redis-coroutine/com.github.coroutine.repository/-coroutine-redis-repository/save.html","searchKeys":["save","abstract suspend fun save(value: V, expire: Duration): V","com.github.coroutine.repository.CoroutineRedisRepository.save"]},{"name":"annotation class EnableCoroutineRedisRepositories(val basePackages: Array<String> = [])","description":"com.github.coroutine.annotation.EnableCoroutineRedisRepositories","location":"redis-coroutine/com.github.coroutine.annotation/-enable-coroutine-redis-repositories/index.html","searchKeys":["EnableCoroutineRedisRepositories","annotation class EnableCoroutineRedisRepositories(val basePackages: Array<String> = [])","com.github.coroutine.annotation.EnableCoroutineRedisRepositories"]},{"name":"class CoroutineRedisRepositoryFactoryBean<T : CoroutineRedisRepository<*, *>>(repositoryType: Class<T>) : AbstractRepositoryFactoryBean<T> ","description":"com.github.coroutine.core.CoroutineRedisRepositoryFactoryBean","location":"redis-coroutine/com.github.coroutine.core/-coroutine-redis-repository-factory-bean/index.html","searchKeys":["CoroutineRedisRepositoryFactoryBean","class CoroutineRedisRepositoryFactoryBean<T : CoroutineRedisRepository<*, *>>(repositoryType: Class<T>) : AbstractRepositoryFactoryBean<T> ","com.github.coroutine.core.CoroutineRedisRepositoryFactoryBean"]},{"name":"class CoroutineRedisRepositoryHandler(entityType: Class<*>, redisTemplate: ReactiveRedisTemplate<String, String>, objectMapper: ObjectMapper) : CoInvocationHandler","description":"com.github.coroutine.core.CoroutineRedisRepositoryHandler","location":"redis-coroutine/com.github.coroutine.core/-coroutine-redis-repository-handler/index.html","searchKeys":["CoroutineRedisRepositoryHandler","class CoroutineRedisRepositoryHandler(entityType: Class<*>, redisTemplate: ReactiveRedisTemplate<String, String>, objectMapper: ObjectMapper) : CoInvocationHandler","com.github.coroutine.core.CoroutineRedisRepositoryHandler"]},{"name":"class CoroutineRedisRepositoryRegistrar : ImportBeanDefinitionRegistrar","description":"com.github.coroutine.core.CoroutineRedisRepositoryRegistrar","location":"redis-coroutine/com.github.coroutine.core/-coroutine-redis-repository-registrar/index.html","searchKeys":["CoroutineRedisRepositoryRegistrar","class CoroutineRedisRepositoryRegistrar : ImportBeanDefinitionRegistrar","com.github.coroutine.core.CoroutineRedisRepositoryRegistrar"]},{"name":"constructor()","description":"com.github.coroutine.core.CoroutineRedisRepositoryRegistrar.CoroutineRedisRepositoryRegistrar","location":"redis-coroutine/com.github.coroutine.core/-coroutine-redis-repository-registrar/-coroutine-redis-repository-registrar.html","searchKeys":["CoroutineRedisRepositoryRegistrar","constructor()","com.github.coroutine.core.CoroutineRedisRepositoryRegistrar.CoroutineRedisRepositoryRegistrar"]},{"name":"constructor()","description":"com.github.coroutine.proxy.CoInvocationHandler.CoInvocationHandler","location":"redis-coroutine/com.github.coroutine.proxy/-co-invocation-handler/-co-invocation-handler.html","searchKeys":["CoInvocationHandler","constructor()","com.github.coroutine.proxy.CoInvocationHandler.CoInvocationHandler"]},{"name":"constructor(entityType: Class<*>, redisTemplate: ReactiveRedisTemplate<String, String>, objectMapper: ObjectMapper)","description":"com.github.coroutine.core.CoroutineRedisRepositoryHandler.CoroutineRedisRepositoryHandler","location":"redis-coroutine/com.github.coroutine.core/-coroutine-redis-repository-handler/-coroutine-redis-repository-handler.html","searchKeys":["CoroutineRedisRepositoryHandler","constructor(entityType: Class<*>, redisTemplate: ReactiveRedisTemplate<String, String>, objectMapper: ObjectMapper)","com.github.coroutine.core.CoroutineRedisRepositoryHandler.CoroutineRedisRepositoryHandler"]},{"name":"constructor(repositoryType: Class<T>)","description":"com.github.coroutine.core.CoroutineRedisRepositoryFactoryBean.CoroutineRedisRepositoryFactoryBean","location":"redis-coroutine/com.github.coroutine.core/-coroutine-redis-repository-factory-bean/-coroutine-redis-repository-factory-bean.html","searchKeys":["CoroutineRedisRepositoryFactoryBean","constructor(repositoryType: Class<T>)","com.github.coroutine.core.CoroutineRedisRepositoryFactoryBean.CoroutineRedisRepositoryFactoryBean"]},{"name":"interface CoroutineRedisRepository<V, K> : Repository<V, K> ","description":"com.github.coroutine.repository.CoroutineRedisRepository","location":"redis-coroutine/com.github.coroutine.repository/-coroutine-redis-repository/index.html","searchKeys":["CoroutineRedisRepository","interface CoroutineRedisRepository<V, K> : Repository<V, K> ","com.github.coroutine.repository.CoroutineRedisRepository"]},{"name":"object Companion","description":"com.github.coroutine.annotation.EnableCoroutineRedisRepositories.Companion","location":"redis-coroutine/com.github.coroutine.annotation/-enable-coroutine-redis-repositories/-companion/index.html","searchKeys":["Companion","object Companion","com.github.coroutine.annotation.EnableCoroutineRedisRepositories.Companion"]},{"name":"open override fun getHandler(): InvocationHandler","description":"com.github.coroutine.core.CoroutineRedisRepositoryFactoryBean.getHandler","location":"redis-coroutine/com.github.coroutine.core/-coroutine-redis-repository-factory-bean/get-handler.html","searchKeys":["getHandler","open override fun getHandler(): InvocationHandler","com.github.coroutine.core.CoroutineRedisRepositoryFactoryBean.getHandler"]},{"name":"open override fun invoke(function: KFunction<*>, parameters: List<*>): Any?","description":"com.github.coroutine.core.CoroutineRedisRepositoryHandler.invoke","location":"redis-coroutine/com.github.coroutine.core/-coroutine-redis-repository-handler/invoke.html","searchKeys":["invoke","open override fun invoke(function: KFunction<*>, parameters: List<*>): Any?","com.github.coroutine.core.CoroutineRedisRepositoryHandler.invoke"]},{"name":"open override fun registerBeanDefinitions(importingClassMetadata: AnnotationMetadata, registry: BeanDefinitionRegistry)","description":"com.github.coroutine.core.CoroutineRedisRepositoryRegistrar.registerBeanDefinitions","location":"redis-coroutine/com.github.coroutine.core/-coroutine-redis-repository-registrar/register-bean-definitions.html","searchKeys":["registerBeanDefinitions","open override fun registerBeanDefinitions(importingClassMetadata: AnnotationMetadata, registry: BeanDefinitionRegistry)","com.github.coroutine.core.CoroutineRedisRepositoryRegistrar.registerBeanDefinitions"]},{"name":"open suspend override fun coInvoke(function: KFunction<*>, parameters: List<*>): Any?","description":"com.github.coroutine.core.CoroutineRedisRepositoryHandler.coInvoke","location":"redis-coroutine/com.github.coroutine.core/-coroutine-redis-repository-handler/co-invoke.html","searchKeys":["coInvoke","open suspend override fun coInvoke(function: KFunction<*>, parameters: List<*>): Any?","com.github.coroutine.core.CoroutineRedisRepositoryHandler.coInvoke"]},{"name":"operator fun invoke(annotationMetadata: AnnotationMetadata): EnableCoroutineRedisRepositories","description":"com.github.coroutine.annotation.EnableCoroutineRedisRepositories.Companion.invoke","location":"redis-coroutine/com.github.coroutine.annotation/-enable-coroutine-redis-repositories/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(annotationMetadata: AnnotationMetadata): EnableCoroutineRedisRepositories","com.github.coroutine.annotation.EnableCoroutineRedisRepositories.Companion.invoke"]},{"name":"operator override fun invoke(proxy: Any, method: Method, args: Array<*>?): Any?","description":"com.github.coroutine.proxy.CoInvocationHandler.invoke","location":"redis-coroutine/com.github.coroutine.proxy/-co-invocation-handler/invoke.html","searchKeys":["invoke","operator override fun invoke(proxy: Any, method: Method, args: Array<*>?): Any?","com.github.coroutine.proxy.CoInvocationHandler.invoke"]},{"name":"val basePackages: Array<String>","description":"com.github.coroutine.annotation.EnableCoroutineRedisRepositories.basePackages","location":"redis-coroutine/com.github.coroutine.annotation/-enable-coroutine-redis-repositories/base-packages.html","searchKeys":["basePackages","val basePackages: Array<String>","com.github.coroutine.annotation.EnableCoroutineRedisRepositories.basePackages"]},{"name":"abstract fun deleteByKey(key: K): Mono<Boolean>","description":"com.github.reactor.repository.ReactiveRedisRepository.deleteByKey","location":"redis-reactor/com.github.reactor.repository/-reactive-redis-repository/delete-by-key.html","searchKeys":["deleteByKey","abstract fun deleteByKey(key: K): Mono<Boolean>","com.github.reactor.repository.ReactiveRedisRepository.deleteByKey"]},{"name":"abstract fun findByKey(key: K): Mono<V>","description":"com.github.reactor.repository.ReactiveRedisRepository.findByKey","location":"redis-reactor/com.github.reactor.repository/-reactive-redis-repository/find-by-key.html","searchKeys":["findByKey","abstract fun findByKey(key: K): Mono<V>","com.github.reactor.repository.ReactiveRedisRepository.findByKey"]},{"name":"abstract fun save(value: V): Mono<V>","description":"com.github.reactor.repository.ReactiveRedisRepository.save","location":"redis-reactor/com.github.reactor.repository/-reactive-redis-repository/save.html","searchKeys":["save","abstract fun save(value: V): Mono<V>","com.github.reactor.repository.ReactiveRedisRepository.save"]},{"name":"abstract fun save(value: V, expire: Duration): Mono<V>","description":"com.github.reactor.repository.ReactiveRedisRepository.save","location":"redis-reactor/com.github.reactor.repository/-reactive-redis-repository/save.html","searchKeys":["save","abstract fun save(value: V, expire: Duration): Mono<V>","com.github.reactor.repository.ReactiveRedisRepository.save"]},{"name":"annotation class EnableReactiveRedisRepositories(val basePackages: Array<String> = [])","description":"com.github.reactor.annotation.EnableReactiveRedisRepositories","location":"redis-reactor/com.github.reactor.annotation/-enable-reactive-redis-repositories/index.html","searchKeys":["EnableReactiveRedisRepositories","annotation class EnableReactiveRedisRepositories(val basePackages: Array<String> = [])","com.github.reactor.annotation.EnableReactiveRedisRepositories"]},{"name":"class ReactiveRedisRepositoryFactoryBean<T : ReactiveRedisRepository<*, *>>(repositoryType: Class<T>) : AbstractRepositoryFactoryBean<T> ","description":"com.github.reactor.core.ReactiveRedisRepositoryFactoryBean","location":"redis-reactor/com.github.reactor.core/-reactive-redis-repository-factory-bean/index.html","searchKeys":["ReactiveRedisRepositoryFactoryBean","class ReactiveRedisRepositoryFactoryBean<T : ReactiveRedisRepository<*, *>>(repositoryType: Class<T>) : AbstractRepositoryFactoryBean<T> ","com.github.reactor.core.ReactiveRedisRepositoryFactoryBean"]},{"name":"class ReactiveRedisRepositoryHandler(entityType: Class<*>, redisTemplate: ReactiveRedisTemplate<String, String>, objectMapper: ObjectMapper) : InvocationHandler","description":"com.github.reactor.core.ReactiveRedisRepositoryHandler","location":"redis-reactor/com.github.reactor.core/-reactive-redis-repository-handler/index.html","searchKeys":["ReactiveRedisRepositoryHandler","class ReactiveRedisRepositoryHandler(entityType: Class<*>, redisTemplate: ReactiveRedisTemplate<String, String>, objectMapper: ObjectMapper) : InvocationHandler","com.github.reactor.core.ReactiveRedisRepositoryHandler"]},{"name":"class ReactiveRedisRepositoryProxy(entityType: Class<*>, redisTemplate: ReactiveRedisTemplate<String, String>, objectMapper: ObjectMapper) : ReactiveRedisRepository<Any, String> ","description":"com.github.reactor.repository.ReactiveRedisRepositoryProxy","location":"redis-reactor/com.github.reactor.repository/-reactive-redis-repository-proxy/index.html","searchKeys":["ReactiveRedisRepositoryProxy","class ReactiveRedisRepositoryProxy(entityType: Class<*>, redisTemplate: ReactiveRedisTemplate<String, String>, objectMapper: ObjectMapper) : ReactiveRedisRepository<Any, String> ","com.github.reactor.repository.ReactiveRedisRepositoryProxy"]},{"name":"class ReactiveRedisRepositoryRegistrar : ImportBeanDefinitionRegistrar","description":"com.github.reactor.core.ReactiveRedisRepositoryRegistrar","location":"redis-reactor/com.github.reactor.core/-reactive-redis-repository-registrar/index.html","searchKeys":["ReactiveRedisRepositoryRegistrar","class ReactiveRedisRepositoryRegistrar : ImportBeanDefinitionRegistrar","com.github.reactor.core.ReactiveRedisRepositoryRegistrar"]},{"name":"constructor()","description":"com.github.reactor.core.ReactiveRedisRepositoryRegistrar.ReactiveRedisRepositoryRegistrar","location":"redis-reactor/com.github.reactor.core/-reactive-redis-repository-registrar/-reactive-redis-repository-registrar.html","searchKeys":["ReactiveRedisRepositoryRegistrar","constructor()","com.github.reactor.core.ReactiveRedisRepositoryRegistrar.ReactiveRedisRepositoryRegistrar"]},{"name":"constructor(entityType: Class<*>, redisTemplate: ReactiveRedisTemplate<String, String>, objectMapper: ObjectMapper)","description":"com.github.reactor.core.ReactiveRedisRepositoryHandler.ReactiveRedisRepositoryHandler","location":"redis-reactor/com.github.reactor.core/-reactive-redis-repository-handler/-reactive-redis-repository-handler.html","searchKeys":["ReactiveRedisRepositoryHandler","constructor(entityType: Class<*>, redisTemplate: ReactiveRedisTemplate<String, String>, objectMapper: ObjectMapper)","com.github.reactor.core.ReactiveRedisRepositoryHandler.ReactiveRedisRepositoryHandler"]},{"name":"constructor(entityType: Class<*>, redisTemplate: ReactiveRedisTemplate<String, String>, objectMapper: ObjectMapper)","description":"com.github.reactor.repository.ReactiveRedisRepositoryProxy.ReactiveRedisRepositoryProxy","location":"redis-reactor/com.github.reactor.repository/-reactive-redis-repository-proxy/-reactive-redis-repository-proxy.html","searchKeys":["ReactiveRedisRepositoryProxy","constructor(entityType: Class<*>, redisTemplate: ReactiveRedisTemplate<String, String>, objectMapper: ObjectMapper)","com.github.reactor.repository.ReactiveRedisRepositoryProxy.ReactiveRedisRepositoryProxy"]},{"name":"constructor(repositoryType: Class<T>)","description":"com.github.reactor.core.ReactiveRedisRepositoryFactoryBean.ReactiveRedisRepositoryFactoryBean","location":"redis-reactor/com.github.reactor.core/-reactive-redis-repository-factory-bean/-reactive-redis-repository-factory-bean.html","searchKeys":["ReactiveRedisRepositoryFactoryBean","constructor(repositoryType: Class<T>)","com.github.reactor.core.ReactiveRedisRepositoryFactoryBean.ReactiveRedisRepositoryFactoryBean"]},{"name":"interface ReactiveRedisRepository<V, K> : Repository<V, K> ","description":"com.github.reactor.repository.ReactiveRedisRepository","location":"redis-reactor/com.github.reactor.repository/-reactive-redis-repository/index.html","searchKeys":["ReactiveRedisRepository","interface ReactiveRedisRepository<V, K> : Repository<V, K> ","com.github.reactor.repository.ReactiveRedisRepository"]},{"name":"object Companion","description":"com.github.reactor.annotation.EnableReactiveRedisRepositories.Companion","location":"redis-reactor/com.github.reactor.annotation/-enable-reactive-redis-repositories/-companion/index.html","searchKeys":["Companion","object Companion","com.github.reactor.annotation.EnableReactiveRedisRepositories.Companion"]},{"name":"open operator override fun invoke(proxy: Any, method: Method, args: Array<*>): Publisher<*>","description":"com.github.reactor.core.ReactiveRedisRepositoryHandler.invoke","location":"redis-reactor/com.github.reactor.core/-reactive-redis-repository-handler/invoke.html","searchKeys":["invoke","open operator override fun invoke(proxy: Any, method: Method, args: Array<*>): Publisher<*>","com.github.reactor.core.ReactiveRedisRepositoryHandler.invoke"]},{"name":"open override fun deleteByKey(key: String): Mono<Boolean>","description":"com.github.reactor.repository.ReactiveRedisRepositoryProxy.deleteByKey","location":"redis-reactor/com.github.reactor.repository/-reactive-redis-repository-proxy/delete-by-key.html","searchKeys":["deleteByKey","open override fun deleteByKey(key: String): Mono<Boolean>","com.github.reactor.repository.ReactiveRedisRepositoryProxy.deleteByKey"]},{"name":"open override fun findByKey(key: String): Mono<Any>","description":"com.github.reactor.repository.ReactiveRedisRepositoryProxy.findByKey","location":"redis-reactor/com.github.reactor.repository/-reactive-redis-repository-proxy/find-by-key.html","searchKeys":["findByKey","open override fun findByKey(key: String): Mono<Any>","com.github.reactor.repository.ReactiveRedisRepositoryProxy.findByKey"]},{"name":"open override fun getHandler(): InvocationHandler","description":"com.github.reactor.core.ReactiveRedisRepositoryFactoryBean.getHandler","location":"redis-reactor/com.github.reactor.core/-reactive-redis-repository-factory-bean/get-handler.html","searchKeys":["getHandler","open override fun getHandler(): InvocationHandler","com.github.reactor.core.ReactiveRedisRepositoryFactoryBean.getHandler"]},{"name":"open override fun registerBeanDefinitions(importingClassMetadata: AnnotationMetadata, registry: BeanDefinitionRegistry)","description":"com.github.reactor.core.ReactiveRedisRepositoryRegistrar.registerBeanDefinitions","location":"redis-reactor/com.github.reactor.core/-reactive-redis-repository-registrar/register-bean-definitions.html","searchKeys":["registerBeanDefinitions","open override fun registerBeanDefinitions(importingClassMetadata: AnnotationMetadata, registry: BeanDefinitionRegistry)","com.github.reactor.core.ReactiveRedisRepositoryRegistrar.registerBeanDefinitions"]},{"name":"open override fun save(value: Any): Mono<Any>","description":"com.github.reactor.repository.ReactiveRedisRepositoryProxy.save","location":"redis-reactor/com.github.reactor.repository/-reactive-redis-repository-proxy/save.html","searchKeys":["save","open override fun save(value: Any): Mono<Any>","com.github.reactor.repository.ReactiveRedisRepositoryProxy.save"]},{"name":"open override fun save(value: Any, expire: Duration): Mono<Any>","description":"com.github.reactor.repository.ReactiveRedisRepositoryProxy.save","location":"redis-reactor/com.github.reactor.repository/-reactive-redis-repository-proxy/save.html","searchKeys":["save","open override fun save(value: Any, expire: Duration): Mono<Any>","com.github.reactor.repository.ReactiveRedisRepositoryProxy.save"]},{"name":"operator fun invoke(annotationMetadata: AnnotationMetadata): EnableReactiveRedisRepositories","description":"com.github.reactor.annotation.EnableReactiveRedisRepositories.Companion.invoke","location":"redis-reactor/com.github.reactor.annotation/-enable-reactive-redis-repositories/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(annotationMetadata: AnnotationMetadata): EnableReactiveRedisRepositories","com.github.reactor.annotation.EnableReactiveRedisRepositories.Companion.invoke"]},{"name":"val basePackages: Array<String>","description":"com.github.reactor.annotation.EnableReactiveRedisRepositories.basePackages","location":"redis-reactor/com.github.reactor.annotation/-enable-reactive-redis-repositories/base-packages.html","searchKeys":["basePackages","val basePackages: Array<String>","com.github.reactor.annotation.EnableReactiveRedisRepositories.basePackages"]},{"name":"abstract class AbstractRepositoryFactoryBean<T : Repository<*, *>>(repositoryType: Class<T>) : FactoryBean<T> ","description":"com.github.core.AbstractRepositoryFactoryBean","location":"redis-core/com.github.core/-abstract-repository-factory-bean/index.html","searchKeys":["AbstractRepositoryFactoryBean","abstract class AbstractRepositoryFactoryBean<T : Repository<*, *>>(repositoryType: Class<T>) : FactoryBean<T> ","com.github.core.AbstractRepositoryFactoryBean"]},{"name":"abstract fun getHandler(): InvocationHandler","description":"com.github.core.AbstractRepositoryFactoryBean.getHandler","location":"redis-core/com.github.core/-abstract-repository-factory-bean/get-handler.html","searchKeys":["getHandler","abstract fun getHandler(): InvocationHandler","com.github.core.AbstractRepositoryFactoryBean.getHandler"]},{"name":"annotation class Key","description":"com.github.core.annotation.Key","location":"redis-core/com.github.core.annotation/-key/index.html","searchKeys":["Key","annotation class Key","com.github.core.annotation.Key"]},{"name":"class BeanRegistrationProvider(registry: BeanDefinitionRegistry, targetType: Class<*>, beanType: Class<out FactoryBean<*>>) : ClassPathScanningCandidateComponentProvider","description":"com.github.core.BeanRegistrationProvider","location":"redis-core/com.github.core/-bean-registration-provider/index.html","searchKeys":["BeanRegistrationProvider","class BeanRegistrationProvider(registry: BeanDefinitionRegistry, targetType: Class<*>, beanType: Class<out FactoryBean<*>>) : ClassPathScanningCandidateComponentProvider","com.github.core.BeanRegistrationProvider"]},{"name":"class JacksonConfiguration","description":"com.github.core.config.JacksonConfiguration","location":"redis-core/com.github.core.config/-jackson-configuration/index.html","searchKeys":["JacksonConfiguration","class JacksonConfiguration","com.github.core.config.JacksonConfiguration"]},{"name":"constructor()","description":"com.github.core.config.JacksonConfiguration.JacksonConfiguration","location":"redis-core/com.github.core.config/-jackson-configuration/-jackson-configuration.html","searchKeys":["JacksonConfiguration","constructor()","com.github.core.config.JacksonConfiguration.JacksonConfiguration"]},{"name":"constructor(registry: BeanDefinitionRegistry, targetType: Class<*>, beanType: Class<out FactoryBean<*>>)","description":"com.github.core.BeanRegistrationProvider.BeanRegistrationProvider","location":"redis-core/com.github.core/-bean-registration-provider/-bean-registration-provider.html","searchKeys":["BeanRegistrationProvider","constructor(registry: BeanDefinitionRegistry, targetType: Class<*>, beanType: Class<out FactoryBean<*>>)","com.github.core.BeanRegistrationProvider.BeanRegistrationProvider"]},{"name":"constructor(repositoryType: Class<T>)","description":"com.github.core.AbstractRepositoryFactoryBean.AbstractRepositoryFactoryBean","location":"redis-core/com.github.core/-abstract-repository-factory-bean/-abstract-repository-factory-bean.html","searchKeys":["AbstractRepositoryFactoryBean","constructor(repositoryType: Class<T>)","com.github.core.AbstractRepositoryFactoryBean.AbstractRepositoryFactoryBean"]},{"name":"fun Any.getKey(entityClass: Class<*>): String","description":"com.github.core.util.getKey","location":"redis-core/com.github.core.util/get-key.html","searchKeys":["getKey","fun Any.getKey(entityClass: Class<*>): String","com.github.core.util.getKey"]},{"name":"fun objectMapper(): ObjectMapper","description":"com.github.core.config.JacksonConfiguration.objectMapper","location":"redis-core/com.github.core.config/-jackson-configuration/object-mapper.html","searchKeys":["objectMapper","fun objectMapper(): ObjectMapper","com.github.core.config.JacksonConfiguration.objectMapper"]},{"name":"open override fun findCandidateComponents(basePackage: String): MutableSet<BeanDefinition>","description":"com.github.core.BeanRegistrationProvider.findCandidateComponents","location":"redis-core/com.github.core/-bean-registration-provider/find-candidate-components.html","searchKeys":["findCandidateComponents","open override fun findCandidateComponents(basePackage: String): MutableSet<BeanDefinition>","com.github.core.BeanRegistrationProvider.findCandidateComponents"]},{"name":"open override fun getObject(): T","description":"com.github.core.AbstractRepositoryFactoryBean.getObject","location":"redis-core/com.github.core/-abstract-repository-factory-bean/get-object.html","searchKeys":["getObject","open override fun getObject(): T","com.github.core.AbstractRepositoryFactoryBean.getObject"]},{"name":"open override fun getObjectType(): Class<T>","description":"com.github.core.AbstractRepositoryFactoryBean.getObjectType","location":"redis-core/com.github.core/-abstract-repository-factory-bean/get-object-type.html","searchKeys":["getObjectType","open override fun getObjectType(): Class<T>","com.github.core.AbstractRepositoryFactoryBean.getObjectType"]}]